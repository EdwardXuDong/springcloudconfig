--什么是ESB?
ESB是传统中间件技术与XML、Web服务等技术结合的产物，主要支持异构系统集成。ESB基于内容的路由和过滤，具备复杂数据的传输能力，并可以提供一系列的标准接口
--ESB的主要功能
(1)服务位置透明性；
(2)传输协议转换；
(3)消息格式转换；
(4)消息路由；
(5)消息增强；
(6)安全性；
(7)监控与管理。
--MVC架构风格？
MVC架构风格：用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互时，不需要重新编写业务逻辑。 
--MVC怎样交互？
MVC架构将整个软件系统划分为模型、视图和控制器3个部分。模型负责维护并保存具有持久性的业务数据，实现业务处理功能，并将业务数据的变化情况及时通知视图；视图负责呈现模型中包含的业务数据，响应模型变化通知，更新呈现形式，并向控制器传递用户的界面动作；控制器负责将用户的界面动作映射为模型中的业务处理功能并实际调用之，然后根据模型返回的业务处理结果选择新的视图。


状态图：主要用于描述一个对象在其生存期间的动态行为，表现一个对象所经历的状态序列，引起状态转移的事件(event)，以及因状态转移而伴随的动作(action)。
活动图：可以用于描述系统的工作流程和并发行为。活动图其实可看作状态图的特殊形式。活动图中一个活动结束后将立即进入下一个活动(在状态图中状态的转移可能需要事件的触发)。
两者最大的区别是：状态图侧重于描述行为的结果，而活动图侧重描述行为的动作。其次活动图可描述并发行为，而状态图不能。

---软件架构风格
特定软件系统组织方式的惯用模式。组织方式是指系统的构件和构件的组织方式，惯用模式是指多个系统共有的结构和语义。
主程序-子程序风格：所有计算构件作为子程序相互协作，并由主程序顺序调用，构件共享存储器交换数据。
管道过滤器：没个构件都有一组输入和输出，构件接收输入数据，处理数据，产生输出数据。这里的构件称为过滤器，构件之间的连接器称为管道。
---可靠性
可靠度就是系统在规定的条件下、规定的时间内不发生失效的概率。
失效率又称风险函数，也可以称为条件失效强度，是指运行至此刻系统未出现失效的情
况下，单位时间系统出现失效的概率。

动态冗余又称为主动冗余，它是通过故障检测、故障定位及故障恢复等手段达到容错的
目的。其主要方式是多重模块待机储备，当系统检测到某工作模块出现错误时，就用一个备
用的模块来替代它并重新运行。各备用模块在其待机时，可与主模块一样工作，也可以不工
作。前者叫热备份系统（双重系统），后者叫冷备份系统（双工系统、双份系统）。
N版本程序设计是一种静态的故障屏蔽技术，其设计思想是用N个具有相同功能的程
序同时执行一项计算，结果通过多数表决来选择。其中N个版本的程序必须由不同的人独
立设计，使用不同的方法、设计语言、开发环境和工具来实现，目的是减少N个版本的程
序在表决点上相关错误的概率。

检错技术优点：实现代价较低，缺点：不能自动恢复故障，需要人工干预
实现方式：1、判断返回结果 2、计算运行时间 3、设置状态标志位等
处理方式：查处故障、停止软件运行、警报等。


这些质量属性的具体含义是：
(1)性能是指系统的响应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理事件的个数。
(2)可用性是系统能够正常运行的时间比例。
(3)可靠性是指软件系统在应用或错误面前，在意外或错误使用的情况下维持软件系统功能特性的基本能力。
(4)健壮性是指在处理或环境中，系统能够承受压力或变更的能力。
(5)安全性是指系统向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。
(6)可修改性是指能够快速地以较高的性能价格比对系统进行变更的能力。
(7)可变性是指体系结构经扩充或变更成为新体系结构的能力。
(8)易用性是衡量用户使用一个软件产品完成指定任务的难易程度。
(9)可测试性是指软件发现故障并隔离、定位其故障的能力特性，以及在一定的时间和成本前提下，进行测试设计、测试执行的能力。
(10)功能性是系统所能完成所期望工作的能力。
(11)互操作性是指系统与外界或系统与系统之间的相互作用能力。

--C/S架构优缺点：
具有强大的数据操作以及事务处理能力。
模型简单，易于理解。

1)开发成本高。
2)客户端程序设计复杂。
3)软件移植困难。
4)不利于升级和维护。
--B/S架构优缺点
节约开发成本。
软件安装、维护、修改全在服务器端解决。
适用浏览器，不需要额外开发客户端。

1)缺乏对动态页面的支持能力。
2)系统扩展能力差，安全性难以控制。
3)浏览器厂商以及版本众多，兼容困难。
4)在查询等响应速度上较慢。
5)数据的动态性交互不强，不利于在线的事物处理。


CMM是一种用于评价软件承包能力并帮助其改善软件质量的方法，侧重于软件开发过程的管理及工程能力的提高与评估。
CMM分为五个等级：一级为初始级，二级为可重复级，三级为已定义级，四级为已管理级，五级为优化级。
CMMI 初始级 可管理级  已定义级 量化管理级 优化管理级

面向对象的分析模型主要由（顶层架构图）、（用例与用例图）和(领域概念模型 )构成：设计模型则包含以(包图 )表示的软件体系
结构图、以（交互图）表示的用例实现图、完整精确的类图、描述复杂对象的(状态图 )和用以描述流程化处理过程的
（活动图）等

构件的特性是:
（1）独立部署单元；
（2）作为第三方的组装单元；
（3）没有（外部的）可见状态。
一个构件可以包含多个类元素，但是一个类元素只能属于一个构件。将一个类拆分进行部署通常没什么意义。
对象的特性是：
（1）一个实例单元，具有唯一的标志。
（2）可能具有状态，此状态外部可见。
（3）封装了自己的状态和行为。

















